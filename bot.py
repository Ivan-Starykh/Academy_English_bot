import logging
import os
from dotenv import load_dotenv
from telegram import (
    Update, InlineKeyboardButton, InlineKeyboardMarkup, InputFile,
    ReplyKeyboardMarkup, KeyboardButton
)
from telegram.ext import Application, CommandHandler, CallbackContext, CallbackQueryHandler, MessageHandler, filters
from telegram.error import BadRequest

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("TELEGRAM_TOKEN")

logging.basicConfig(level=logging.INFO)

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤
USERS_FILE = "users.txt"
GIFTED_USERS_FILE = "gifted_users.txt"

# –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞
def load_users():
    if not os.path.exists(USERS_FILE):
        return set()
    with open(USERS_FILE, "r") as file:
        users = {line.strip() for line in file}
    return users

# –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–¥–∞—Ä–æ–∫
def load_gifted_users():
    if not os.path.exists(GIFTED_USERS_FILE):
        return set()
    with open(GIFTED_USERS_FILE, "r") as file:
        users = {line.strip() for line in file}
    return users

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª
def save_user(user_id):
    with open(USERS_FILE, "a") as file:
        file.write(f"{user_id}\n")

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–¥–∞—Ä–æ–∫
def save_gifted_user(user_id):
    with open(GIFTED_USERS_FILE, "a") as file:
        file.write(f"{user_id}\n")

async def start(update: Update, context: CallbackContext) -> None:
    user_id = str(update.message.from_user.id)
    user_first_name = update.message.from_user.first_name
    
    users = load_users()
    
    if user_id in users:
        message = f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user_first_name}!"
    else:
        message = f"–ü—Ä–∏–≤–µ—Ç, {user_first_name}! –Ø –≤–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç."
        save_user(user_id)
    
    await update.message.reply_text(message)
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è
    image_path = './images/1125.jpg'
    caption = (
        '–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫ –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É —è–∑—ã–∫—É, –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π, '
        '–∏–∑—É—á–∏—Ç—å –æ—Ç–∑—ã–≤—ã –∏ –≤—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å –∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ.'
    )
    
    try:
        with open(image_path, 'rb') as photo:
            await update.message.reply_photo(photo=InputFile(photo), caption=caption)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")

    # –ü–æ–∫–∞–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
    await show_main_menu(update)

    # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é-–∫–Ω–æ–ø–∫–∏ –∏ –∫–Ω–æ–ø–∫–∏ "–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç"
    menu_keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é üîç"), KeyboardButton(text="–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç üë§")]
        ],
        resize_keyboard=True
    )
    # await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:", reply_markup=menu_keyboard)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏
async def show_main_menu(update: Update) -> None:
    keyboard = [
        [InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫", callback_data='gift')],
        [InlineKeyboardButton("–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data='test')],
        [InlineKeyboardButton("–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —à–∫–æ–ª–µ", callback_data='about_school')],
        [InlineKeyboardButton("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã", callback_data='results')],
        [InlineKeyboardButton("–û—Ç–∑—ã–≤—ã", callback_data='reviews')],
        [InlineKeyboardButton("–ù–∞—à–∏ —É—Å–ª—É–≥–∏", callback_data='services')],
        [InlineKeyboardButton("–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞", callback_data='manager')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üîß", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏ "–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"
async def handle_main_menu_button(update: Update, context: CallbackContext) -> None:
    if update.message.text == "–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é üîç":
        await show_main_menu(update)

CHANNEL_USERNAME = "@academyenglishstart"  

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
async def button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    if query.data == 'gift':
        user_id = query.from_user.id
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø–æ–ª—É—á–∞–ª –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∞—Ä–æ–∫
        if user_has_received_gift(user_id):
            await query.edit_message_text(text="–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫.")
        else:
            message = (
                "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ –¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª.\n\n"
                "üëâ @academyenglishstart\n\n"
                "–ò –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É \"–ü–æ–¥–ø–∏—Å–∞–ª—Å—è\" –ø–æ–¥ —ç—Ç–∏–º –ø–æ—Å—Ç–æ–º."
            )
            # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–ø–∏—Å–∞–ª—Å—è"
            keyboard = [[InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data='subscribed')]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.edit_message_text(text=message, reply_markup=reply_markup)

    elif query.data == 'subscribed':
        user_id = query.from_user.id
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª–µ
            chat_member = await context.bot.get_chat_member(CHANNEL_USERNAME, user_id)
            if chat_member.status in ["member", "administrator", "creator"]:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω
                await query.edit_message_text(text="–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫.")
                # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥–∞—Ä–∫–∞
                await send_gift(context.bot, user_id)
            else:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
                message = "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª: @academyenglishstart"
								# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–ø–∏—Å–∞–ª—Å—è"
                keyboard = [[InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data='subscribed')]]
                reply_markup = InlineKeyboardMarkup(keyboard)
                await query.edit_message_text(text=message, reply_markup=reply_markup)
        except BadRequest:
            # –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
            await query.edit_message_text(text="–û—à–∏–±–∫–∞: –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —Ä–∞–∑–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    elif query.data == 'test':
        await query.edit_message_text(text="–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: ...")
        
    elif query.data == 'about_school':
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è
        image_path = './images/about.jpg'
        caption = (
            "English Academy ‚Äì —Å–µ—Ç—å —à–∫–æ–ª –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –≤–æ—Ç —É–∂–µ –¥–µ–≤—è—Ç—å –ª–µ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ "
            "–≤ —Å—Ñ–µ—Ä–µ –∏–∑—É—á–µ–Ω–∏—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤. –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ª—é–±—ã–µ –¥–≤–µ—Ä–∏ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–º –¥–Ω–µ.\n\n"
            "–®–∫–æ–ª—ã English Academy –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç —à–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –ø—Ä–æ–≥—Ä–∞–º–º –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –¥–ª—è –¥–µ—Ç–µ–π –æ—Ç 3 –ª–µ—Ç, –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤ –∏ –≤–∑—Ä–æ—Å–ª—ã—Ö. "
            "–ü—Ä–æ–≥—Ä–∞–º–º—ã —É—á–∏—Ç—ã–≤–∞—é—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —Å–¥–µ–ª–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã–º, –Ω–æ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º. \n\n"
            "–ó–∞–Ω—è—Ç–∏—è –≤ English Academy –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –ø–æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω–æ–π –º–µ—Ç–æ–¥–∏–∫–µ, –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–¥–∞—á–µ–π –∫–æ—Ç–æ—Ä–æ–π —è–≤–ª—è–µ—Ç—Å—è –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω—É—é —è–∑—ã–∫–æ–≤—É—é —Å—Ä–µ–¥—É –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤ –æ–±—â–µ–Ω–∏—è –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ. "
            "–≠—Ç–æ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–º—É –æ—Å–≤–æ–µ–Ω–∏—é –∑–Ω–∞–Ω–∏–π, –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç –∫ –∏–∑—É—á–µ–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å —è–∑—ã–∫–æ–≤–æ–π –±–∞—Ä—å–µ—Ä.\n\n"
            # "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n\n"
        )
        try:
            with open(image_path, 'rb') as photo:
                await context.bot.send_photo(chat_id=query.message.chat.id, photo=photo, caption=caption)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")

        await show_main_menu(update)


# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é `callback_data`
    elif query.data == 'results':
        await query.edit_message_text(text="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã: ...")
    elif query.data == 'reviews':
        await query.edit_message_text(text="–û—Ç–∑—ã–≤—ã: ...")
    elif query.data == 'services':
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å —É—Å–ª—É–≥–∞–º–∏
        await show_services_menu(update, context)
    elif query.data == 'english_courses':
        await query.edit_message_text(text="–ì—Ä—É–ø–ø–æ–≤—ã–µ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è –¥–ª—è –¥–µ—Ç–µ–π, –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤ –∏ –≤–∑—Ä–æ—Å–ª—ã—Ö. \n\n–ö–∞—Ä—Ç–∏–Ω–∫–∞: (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)")
        await context.bot.send_photo(chat_id=query.message.chat.id, photo=open('./images/english_courses.jpg', 'rb'))

    elif query.data == 'online_courses':
        await query.edit_message_text(text="–î–æ—Å—Ç—É–ø–Ω–æ–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–µ –æ–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏–µ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Zoom. \n\n–ö–∞—Ä—Ç–∏–Ω–∫–∞: (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)")
        await context.bot.send_photo(chat_id=query.message.chat.id, photo=open('./images/online_courses.jpg', 'rb'))
        
    elif query.data == 'study_abroad':
        await query.edit_message_text(text="–ö—É—Ä—Å—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –≤ –ª—É—á—à–∏—Ö –∫–æ–ª–ª–µ–¥–∂–∞—Ö –∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞—Ö –º–∏—Ä–∞. \n\n–ö–∞—Ä—Ç–∏–Ω–∫–∞: (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)")
        await context.bot.send_photo(chat_id=query.message.chat.id, photo=open('./images/abroad.jpg', 'rb'))

    elif query.data == 'cambridge_center':
        await query.edit_message_text(text="–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ —Å–¥–∞—á–∞ –ö–µ–º–±—Ä–∏–¥–∂—Å–∫–∏—Ö —ç–∫–∑–∞–º–µ–Ω–æ–≤. \n\n–ö–∞—Ä—Ç–∏–Ω–∫–∞: (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)")
        await context.bot.send_photo(chat_id=query.message.chat.id, photo=open('./images/cambridge.jpg', 'rb'))
        
    elif query.data == 'translation_services':
        await query.edit_message_text(text="–í—Å–µ –≤–∏–¥—ã –ø–∏—Å—å–º–µ–Ω–Ω—ã—Ö –∏ —É—Å—Ç–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∏ –Ω–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫–∏. \n\n–ö–∞—Ä—Ç–∏–Ω–∫–∞: (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)")
        await context.bot.send_photo(chat_id=query.message.chat.id, photo=open('./images/translation.jpg', 'rb'))
        
    elif query.data == 'corporate_training':
        await query.edit_message_text(text="–í—Å–µ –≤–∏–¥—ã –ø–∏—Å—å–º–µ–Ω–Ω—ã—Ö –∏ —É—Å—Ç–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∏ –Ω–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫–∏. \n\n–ö–∞—Ä—Ç–∏–Ω–∫–∞: (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)")
        await context.bot.send_photo(chat_id=query.message.chat.id, photo=open('./images/translation.jpg', 'rb'))
        
    elif query.data == 'primary_academy':
        await query.edit_message_text(text="–í—Å–µ –≤–∏–¥—ã –ø–∏—Å—å–º–µ–Ω–Ω—ã—Ö –∏ —É—Å—Ç–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∏ –Ω–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫–∏. \n\n–ö–∞—Ä—Ç–∏–Ω–∫–∞: (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)")
        await context.bot.send_photo(chat_id=query.message.chat.id, photo=open('./images/translation.jpg', 'rb'))
        
    elif query.data == 'author_guides':
        await query.edit_message_text(text="–í—Å–µ –≤–∏–¥—ã –ø–∏—Å—å–º–µ–Ω–Ω—ã—Ö –∏ —É—Å—Ç–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∏ –Ω–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫–∏. \n\n–ö–∞—Ä—Ç–∏–Ω–∫–∞: (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)")
        await context.bot.send_photo(chat_id=query.message.chat.id, photo=open('./images/translation.jpg', 'rb'))
        
    elif query.data == 'book_sales':
        await query.edit_message_text(text="–í—Å–µ –≤–∏–¥—ã –ø–∏—Å—å–º–µ–Ω–Ω—ã—Ö –∏ —É—Å—Ç–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∏ –Ω–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫–∏. \n\n–ö–∞—Ä—Ç–∏–Ω–∫–∞: (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)")
        await context.bot.send_photo(chat_id=query.message.chat.id, photo=open('./images/translation.jpg', 'rb'))
    
    # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ elif –±–ª–æ–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–Ω–æ–ø–æ–∫
    elif query.data == 'manager':
        await query.edit_message_text(text="–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞: ...")
    else:
        await query.edit_message_text(text="–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é —É—Å–ª—É–≥
async def show_services_menu(update: Update, context: CallbackContext) -> None:
        keyboard = [
            [InlineKeyboardButton("–ö—É—Ä—Å—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ", callback_data='english_courses')],
            [InlineKeyboardButton("–û–Ω–ª–∞–π–Ω –∫—É—Ä—Å—ã", callback_data='online_courses')],
            [InlineKeyboardButton("–û–±—É—á–µ–Ω–∏–µ –∑–∞ —Ä—É–±–µ–∂–æ–º", callback_data='study_abroad')],
            [InlineKeyboardButton("–ö–µ–º–±—Ä–∏–¥–∂—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä", callback_data='cambridge_center')],
            [InlineKeyboardButton("–£—Å–ª—É–≥–∏ –ø–æ –ø–µ—Ä–µ–≤–æ–¥—É", callback_data='translation_services')],
            [InlineKeyboardButton("–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", callback_data='corporate_training')],
            [InlineKeyboardButton("–ù–∞—á–∞–ª—å–Ω–∞—è –∞–∫–∞–¥–µ–º–∏—è", callback_data='primary_academy')],
            [InlineKeyboardButton("–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –ø–æ—Å–æ–±–∏—è", callback_data='author_guides')],
            [InlineKeyboardButton("–ü—Ä–æ–¥–∞–∂–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã", callback_data='book_sales')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.callback_query.edit_message_text("–ù–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± —É—Å–ª—É–≥–µ:", reply_markup=reply_markup)


# –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø–æ–ª—É—á–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∞—Ä–æ–∫
def user_has_received_gift(user_id):
    RECEIVED_GIFTS_FILE = "received_gifts.txt"
    if not os.path.exists(RECEIVED_GIFTS_FILE):
        return False
    with open(RECEIVED_GIFTS_FILE, "r") as file:
        users = {line.strip() for line in file}
    return str(user_id) in users

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥–∞—Ä–∫–∞
def save_gift_receipt(user_id):
    RECEIVED_GIFTS_FILE = "received_gifts.txt"
    with open(RECEIVED_GIFTS_FILE, "a") as file:
        file.write(f"{user_id}\n")

# –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥–∞—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
async def send_gift(bot, user_id):
    # –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ PDF-—Ñ–∞–π–ª–æ–≤
    files = ["./Unit 2 Progress Test.pdf", "./Ready_Unit 2 Progress Test.pdf"]
    for file_path in files:
        try:
            with open(file_path, "rb") as file:
                await bot.send_document(chat_id=user_id, document=InputFile(file))
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ {file_path}: {e}")

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥–∞—Ä–∫–∞
    save_gift_receipt(user_id)
    
async def my_cabinet(update: Update, context: CallbackContext) -> None:
    user = update.message.from_user
    user_info = (
        f"üë§ –ò–º—è: {user.first_name}\n"
        f"üÜî ID: {user.id}\n"
        f"üí¨ Telegram: @{user.username if user.username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}"
    )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
    try:
        member = await context.bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user.id)
        if member.status in ['member', 'administrator', 'creator']:
            subscription_status = "‚úÖ –ü–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª"
        else:
            subscription_status = "‚ùå –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª @academyenglishstart"
    except BadRequest:
        subscription_status = "‚ùå –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª @academyenglishstart"
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏
    await update.message.reply_text(f"{user_info}\n{subscription_status}")


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    application = Application.builder().token(TOKEN).build()
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
    application.add_handler(CommandHandler("start", start))
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
    application.add_handler(CallbackQueryHandler(button))
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"
    application.add_handler(MessageHandler(filters.Text(["–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é üîç"]), handle_main_menu_button))
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç", –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é my_cabinet
    application.add_handler(MessageHandler(filters.Text(["–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç üë§"]), my_cabinet))
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()
