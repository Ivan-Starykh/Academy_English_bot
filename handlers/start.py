from aiogram import types, Dispatcher
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.types.input_file import FSInputFile
from services.user_service import load_users, save_user
import logging

async def start_command(message: types.Message):
    user_id = str(message.from_user.id)
    user_first_name = message.from_user.first_name

    users = load_users()
    if user_id in users:
        welcome_message = f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user_first_name}!"
    else:
        welcome_message = f"–ü—Ä–∏–≤–µ—Ç, {user_first_name}! –Ø –≤–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç."
        save_user(user_id)

    await message.answer(welcome_message)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å –ø–æ–¥–ø–∏—Å—å—é
    image_path = './images/1125.jpg'  # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø—É—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω
    caption = ('–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫ –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É —è–∑—ã–∫—É, –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π, '
              '–∏–∑—É—á–∏—Ç—å –æ—Ç–∑—ã–≤—ã –∏ –≤—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å –∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ.')
    try:
        photo = FSInputFile(image_path)
        await message.bot.send_photo(chat_id=message.chat.id, photo=photo, caption=caption)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫", callback_data='gift')],
        [InlineKeyboardButton(text="–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data='test')],
        [InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —à–∫–æ–ª–µ", callback_data='about_school')],
        [InlineKeyboardButton(text="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã", callback_data='results')],
        [InlineKeyboardButton(text="–û—Ç–∑—ã–≤—ã", callback_data='reviews')],
        [InlineKeyboardButton(text="–ü—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è", callback_data='programs')],
        [InlineKeyboardButton(text="–í—ã–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞", callback_data='manager')]
    ])

    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

    # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é-–∫–Ω–æ–ø–∫–∏ –∏ –∫–Ω–æ–ø–∫–∏ "–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç"
    menu_keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é üîç"), KeyboardButton(text="–ú–æ–π –∫–∞–±–∏–Ω–µ—Ç üë§")]
        ],
        resize_keyboard=True
    )
    await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:", reply_markup=menu_keyboard)

def register_handlers(dp: Dispatcher):
    dp.message.register(start_command, Command('start'))
